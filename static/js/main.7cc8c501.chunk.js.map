{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","prodIdName","uuidv4","prodIdNumber","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contacts","props","onAddContact","resetForm","this","className","styles","form","onSubmit","label","htmlFor","input","id","type","pattern","title","required","onChange","button","Component","ContactList","onDeleteContact","section","list","map","item","onClick","Filter","App","filter","obj","find","contact","toLowerCase","alert","prevState","contactId","onChangeFilter","currentTarget","localContacts","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cc8c501.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3V5xf\",\"input\":\"Form_input__3R-u3\",\"label\":\"Form_label__Zw2Rv\",\"button\":\"Form_button__3JjQZ\"};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from '../Form/Form.module.css';\n\nexport class Form extends Component {\n  prodIdName = uuidv4();\n  prodIdNumber = uuidv4();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contacts = {\n      name,\n      number,\n    };\n    this.setState({ contacts });\n    this.props.onAddContact(contacts);\n    this.resetForm();\n  };\n\n  //очистка формы\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, prodIdName, handleChange, prodIdNumber } = this;\n    return (\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label} htmlFor={prodIdName}>\n          Name\n        </label>\n        <input\n          className={styles.input}\n          id={prodIdName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n        <br />\n        <label className={styles.label} htmlFor={prodIdNumber}>\n          Number\n        </label>\n        <input\n          className={styles.input}\n          id={prodIdNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <div className={styles.section}>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <p className={styles.name}> {name}:</p>\n          <p className={styles.number}>{number}</p>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.any.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n\n/* import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul>\n    {contacts.map(contact => (\n      <li key={contact.id}>\n        {contact.name + ':' + contact.number}\n        {\n          <button\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Filter/Filter.module.css';\n\nconst Filter = ({ contacts, onChange }) => (\n  <div>\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={contacts}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  contacts: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form } from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(localContacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onAddContact = obj => {\n    const contacts = {\n      id: uuidv4(),\n      name: obj.name,\n      number: obj.number,\n    };\n    /* console.log(contacts.name);\n    console.log(obj.name); */\n    if (\n      this.state.contacts.find(\n        contact => contacts.name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${contacts.name} is already in contacts`);\n    } else\n      this.setState(prevState => {\n        return {\n          contacts: [contacts, ...prevState.contacts],\n        };\n      });\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  onChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  /* removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  }; */\n\n  render() {\n    const { onAddContact, onChangeFilter, onDeleteContact } = this;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return (\n      <section>\n        <h2>Phonebook</h2>\n        <Form onAddContact={onAddContact} />\n        <h2>Contacts</h2>\n        <Filter contacts={this.state.filter} onChange={onChangeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={onDeleteContact}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__NQ9gR\",\"item\":\"ContactList_item__22AaW\",\"name\":\"ContactList_name__2KAuR\",\"number\":\"ContactList_number__2RExX\",\"button\":\"ContactList_button__2ti_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1jp6-\",\"label\":\"Filter_label__hVGTh\"};"],"sourceRoot":""}